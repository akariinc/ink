"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[888],{"./.src/storybook/storybook_admin/lib/storybook/shared/ui/layout/layout.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,boxLayout:()=>boxLayout,default:()=>layout_stories,flexLayout:()=>flexLayout,horizontalGaps:()=>horizontalGaps,horizontalLayout:()=>horizontalLayout,verticalGaps:()=>verticalGaps});var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),sample_data_sets=__webpack_require__("./.src/storybook/storybook_admin/lib/storybook/shared/sample-data-sets.ts");let BoxLayoutComponent=class BoxLayoutComponent{constructor(samples,baseHref){this.samples=samples,this.baseHref=baseHref}getArrayForPercentageDivided(percent){return Array.from({length:Math.floor(100/percent)}).fill(0).map(((_,i)=>i))}getArrayWithLength(n){return Array.from({length:n}).fill(0).map(((_,i)=>i))}imageUrl(path){return`${this.baseHref.replace(/\/$/,"")}${path}`}randomImage(){const len=this.samples.PICTURE_ICONS.length,index=Math.floor(Math.random()*len),path=this.samples.PICTURE_ICONS[index];return console.log(len,index,path),this.imageUrl(path)}concat(a,b){return{...a,...b}}ngOnInit(){}getTooltip(...classes){return`<div class="bg-dark chip-s fixed-container h-gap-s h-layout">\n            <div class="fg-dark mono-small single-line">${classes.join("<br>")}</div>\n        </div>`}static{this.ctorParameters=()=>[{type:sample_data_sets.e},{type:String,decorators:[{type:core.Inject,args:[common.APP_BASE_HREF]}]}]}};BoxLayoutComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"[box-layout-component]",changeDetection:core.ChangeDetectionStrategy.OnPush,template:'\n\n\n<h3 class="single-line sans-large mb20">Horizontal flex layouts</h3>\n\n<p class="sans-small">Padding and gap size from xs, s, m, l, xl (ex: .v-gap-xl .h-gap-xl .padding-xl)</p>\n<div class="flex-container v-layout v-gap-xl">\n    <div class="flex-container h-layout h-gap-xl">\n        <div\n            *ngFor="let size of [\'xs\', \'s\', \'m\']"\n            class="fixed-container w33p h250 background rect r8 bg-b padding-{{ size }} v-layout h-gap-{{ size }} v-gap-{{ size }}">\n            <div class="fixed-container w100p h50p h-layout h-gap-{{ size }} v-gap-{{ size }}">\n                <div class="fixed-container w50p h100p background bg-dark r8"></div>\n                <div class="fixed-container w50p h100p background bg-dark r8"></div>\n            </div>\n            <div class="fixed-container w100p h50p h-layout h-gap-{{ size }} v-gap-{{ size }}">\n                <div class="fixed-container w50p h100p background bg-dark r8"></div>\n                <div class="fixed-container w50p h100p background bg-dark r8"></div>\n            </div>\n        </div>\n    </div>\n    <div class="flex-container h-layout h-gap-xl">\n        <div\n            *ngFor="let size of [\'l\', \'xl\']"\n            class="fixed-container w50p h250 background rect r8 bg-b padding-{{ size }} v-layout h-gap-{{ size }} v-gap-{{ size }}">\n            <div class="fixed-container w100p h50p h-layout h-gap-{{ size }} v-gap-{{ size }}">\n                <div class="fixed-container w50p h100p background bg-dark r8"></div>\n                <div class="fixed-container w50p h100p background bg-dark r8"></div>\n            </div>\n            <div class="fixed-container w100p h50p h-layout h-gap-{{ size }} v-gap-{{ size }}">\n                <div class="fixed-container w50p h100p background bg-dark r8"></div>\n                <div class="fixed-container w50p h100p background bg-dark r8"></div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<h3 class="single-line sans-large mb20">Box corner radius</h3>\n<p class="sans-small">Cornder radius with class r4, r6, r8, r12, r16, r20, r30, r40</p>\n<div class="flex-container h-layout h-gap-xl v-gap-xl flex-wrap">\n    <div\n        *ngFor="let radius of [\'r4\', \'r6\', \'r8\', \'r12\', \'r16\', \'r20\', \'r30\', \'r40\']"\n        class="fixed-container w25p h200 background rect {{ radius }} bg-b padding-m v-layout h-gap-m v-gap-m">\n    </div>\n</div>'}),(0,tslib_es6.Sn)("design:paramtypes",[sample_data_sets.e,String])],BoxLayoutComponent);let FlexLayoutComponent=class FlexLayoutComponent{constructor(samples,baseHref){this.samples=samples,this.baseHref=baseHref}getArrayForPercentageDivided(percent){return Array.from({length:Math.floor(100/percent)}).fill(0).map(((_,i)=>i))}getArrayWithLength(n){return Array.from({length:n}).fill(0).map(((_,i)=>i))}imageUrl(path){return`${this.baseHref.replace(/\/$/,"")}${path}`}randomImage(){const len=this.samples.PICTURE_ICONS.length,index=Math.floor(Math.random()*len),path=this.samples.PICTURE_ICONS[index];return console.log(len,index,path),this.imageUrl(path)}concat(a,b){return{...a,...b}}ngOnInit(){}getTooltip(...classes){return`<div class="bg-dark chip-s fixed-container h-gap-s h-layout">\n            <div class="fg-dark mono-small single-line">${classes.join("<br>")}</div>\n        </div>`}static{this.ctorParameters=()=>[{type:sample_data_sets.e},{type:String,decorators:[{type:core.Inject,args:[common.APP_BASE_HREF]}]}]}};FlexLayoutComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"[flex-layout-component]",changeDetection:core.ChangeDetectionStrategy.OnPush,template:'\n\n\n<h3 class="single-line sans-large mb20">Horizontal flex layouts</h3>\n\n<p class="sans-small">50% (between inside) + 50% (justify-end inside) inside flex container</p>\n<div class="flex-container h-layout justify-center h-gap-s border fg-a r4 background bg-a padding-xs">\n    <div class="fixed-container w50p h50 border rect fg-a r4 background bg padding-xs h-gap-xs between-container">\n        <div class="fixed-container w50 h100p background bg-dark r4"></div>\n        <div class="fixed-container w50 h100p background bg-dark r4"></div>\n    </div>\n    <div class="fixed-container w50p h50 border rect fg-a r4 background bg padding-xs h-gap-xs justify-end">\n        <div class="fixed-container w50 h100p background bg-dark r4"></div>\n        <div class="fixed-container w50 h100p background bg-dark r4"></div>\n    </div>\n</div>\n\n<p class="sans-small">Stretch + 50px inside flex container</p>\n<div class="flex-container h-layout justify-center h-gap-xs border fg-a r4 background bg-a padding-xs">\n    <div class="stretched-container h50 border rect fg-a r4 background bg padding-xs h-gap-xs">\n        <div class="fixed-container w50 h100p background bg-dark r4"></div>\n        <div class="fixed-container w50 h100p background bg-dark r4"></div>\n    </div>\n    <div class="fixed-container w100 h50 border rect fg-a r4 background bg"></div>\n</div>\n\n<p class="sans-small">50px + Stretch (justify-end inside) inside flex container</p>\n<div class="flex-container h-layout justify-center h-gap-xs border fg-a r4 background bg-a padding-xs">\n    <div class="fixed-container w100 h50 border rect fg-a r4 background bg"></div>\n    <div class="stretched-container h50 border rect fg-a r4 background bg padding-xs h-gap-xs justify-end">\n        <div class="fixed-container w50 h100p background bg-dark r4"></div>\n        <div class="fixed-container w50 h100p background bg-dark r4"></div>\n    </div>\n</div>\n\n\n<p class="sans-small">50px + 50px inside flex container (justify start)</p>\n<div class="flex-container h-layout justify-start h-gap-xs border fg-a r4 background bg-a padding-xs overflow-auto">\n    <div class="fixed-container w100 h50 border rect fg-a r4 background bg"></div>\n    <div class="fixed-container w100 h50 border rect fg-a r4 background bg"></div>\n</div>\n\n\n\n<p class="sans-small">50px + 50px inside flex container (justify center)</p>\n<div class="flex-container h-layout justify-center h-gap-xs border fg-a r4 background bg-a padding-xs overflow-auto">\n    <div class="fixed-container w100 h50 border rect fg-a r4 background bg"></div>\n    <div class="fixed-container w100 h50 border rect fg-a r4 background bg"></div>\n</div>\n\n\n<p class="sans-small">50px + 50px inside flex container (justify end)</p>\n<div class="flex-container h-layout justify-end h-gap-xs border fg-a r4 background bg-a padding-xs overflow-auto">\n    <div class="fixed-container w100 h50 border rect fg-a r4 background bg"></div>\n    <div class="fixed-container w100 h50 border rect fg-a r4 background bg"></div>\n</div>\n\n\n<p class="sans-small">50px + 50px inside between container</p>\n<div class="between-container h-layout h-gap-xs border fg-a r4 background bg-a padding-xs overflow-auto">\n    <div class="fixed-container w100 h50 border rect fg-a r4 background bg"></div>\n    <div class="fixed-container w100 h50 border rect fg-a r4 background bg"></div>\n    <div class="fixed-container w100 h50 border rect fg-a r4 background bg"></div>\n</div>\n\n\n\n\n\n<h3 class="single-line sans-large mb20">Vertical flex layouts</h3>\n\n<p class="sans-small">Each same as horizontal.</p>\n<div class="flex-container h-layout h-gap-s h500">\n    <div  class="fixed-container w14p h500 border fg-a r4 background bg-a padding-xs v-layout v-gap-xs">\n        <div class="fixed-container w100p h50p border rect fg-a r4 background bg v-layout padding-xs v-gap-xs justify-end">\n            <div class="fixed-container h50 w100p background bg-dark r4"></div>\n            <div class="fixed-container h50 w100p background bg-dark r4"></div>\n        </div>\n        <div class="fixed-container w100p h50p border rect fg-a r4 background bg v-layout padding-xs v-gap-xs between-container">\n            <div class="fixed-container h50 w100p background bg-dark r4"></div>\n            <div class="fixed-container h50 w100p background bg-dark r4"></div>\n        </div>\n    </div>\n    <div  class="fixed-container w14p h500 border fg-a r4 background bg-a padding-xs v-layout v-gap-xs">\n        <div class="stretched-container w100p border rect fg-a r4 background bg v-layout padding-xs v-gap-xs justify-start">\n            <div class="fixed-container h50 w100p background bg-dark r4"></div>\n            <div class="fixed-container h50 w100p background bg-dark r4"></div>\n        </div>\n        <div class="fixed-container w100p h50 border rect fg-a r4 background bg"></div>\n    </div>\n    <div  class="fixed-container w14p h500 border fg-a r4 background bg-a padding-xs v-layout v-gap-xs">\n        <div class="fixed-container w100p h50 border rect fg-a r4 background bg"></div>\n        <div class="stretched-container w100p border rect fg-a r4 background bg v-layout padding-xs v-gap-xs justify-end">\n            <div class="fixed-container h50 w100p background bg-dark r4"></div>\n            <div class="fixed-container h50 w100p background bg-dark r4"></div>\n        </div>\n    </div>\n    <div  class="fixed-container w14p h500 border fg-a r4 background bg-a padding-xs v-layout justify-start v-gap-xs">\n        <div class="fixed-container w100p h50 border rect fg-a r4 background bg"></div>\n        <div class="fixed-container w100p h50 border rect fg-a r4 background bg"></div>\n\n    </div>\n    <div  class="fixed-container w14p h500 border fg-a r4 background bg-a padding-xs v-layout justify-center v-gap-xs">\n        <div class="fixed-container w100p h50 border rect fg-a r4 background bg"></div>\n        <div class="fixed-container w100p h50 border rect fg-a r4 background bg"></div>\n    </div>\n    <div  class="fixed-container w14p h500 border fg-a r4 background bg-a padding-xs v-layout justify-end v-gap-xs">\n        <div class="fixed-container w100p h50 border rect fg-a r4 background bg"></div>\n        <div class="fixed-container w100p h50 border rect fg-a r4 background bg"></div>\n    </div>\n    <div  class="between-container w14p h500 border fg-a r4 background bg-a padding-xs v-layout v-gap-xs">\n        <div class="fixed-container w100p h50 border rect fg-a r4 background bg"></div>\n        <div class="fixed-container w100p h50 border rect fg-a r4 background bg"></div>\n        <div class="fixed-container w100p h50 border rect fg-a r4 background bg"></div>\n    </div>\n</div>\n'}),(0,tslib_es6.Sn)("design:paramtypes",[sample_data_sets.e,String])],FlexLayoutComponent);let HorizontalGapsComponent=class HorizontalGapsComponent{constructor(samples,baseHref){this.samples=samples,this.baseHref=baseHref}getArrayForPercentageDivided(percent){return Array.from({length:Math.floor(100/percent)}).fill(0).map(((_,i)=>i))}getArrayWithLength(n){return Array.from({length:n}).fill(0).map(((_,i)=>i))}imageUrl(path){return`${this.baseHref.replace(/\/$/,"")}${path}`}randomImage(){const len=this.samples.PICTURE_ICONS.length,index=Math.floor(Math.random()*len),path=this.samples.PICTURE_ICONS[index];return console.log(len,index,path),this.imageUrl(path)}concat(a,b){return{...a,...b}}ngOnInit(){}getTooltip(...classes){return`<div class="bg-dark chip-s fixed-container h-gap-s h-layout">\n            \x3c!--\n            <div stroke-icon icon="search" class="fg-dark xs stroke-icon">\n                <svg width="26" height="26" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg">\n                    <ellipse cx="10" cy="10" rx="6" ry="6" transform="rotate(-90 10 10)"></ellipse>\n                    <path d="M14.5 14.5L20 20" stroke-linecap="round" stroke-linejoin="round"></path>\n                </svg>\n            </div>\n            --\x3e\n            <div class="fg-dark mono-small single-line">${classes.join("<br>")}</div>\n        </div>`}static{this.ctorParameters=()=>[{type:sample_data_sets.e},{type:String,decorators:[{type:core.Inject,args:[common.APP_BASE_HREF]}]}]}};HorizontalGapsComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"[horizontal-gaps-component]",changeDetection:core.ChangeDetectionStrategy.OnPush,template:'\n<h3 class="single-line sans-large mb20">Horizontal gaps</h3>\n<ng-container\n    *ngFor="let size of [\'xs\', \'s\', \'m\', \'l\', \'xl\']">\n    <p class="mono-medium">{{ size }} (.h-gap-{{ size }})</p>\n    <div class="fixed-container h-layout align-center justify-center">\n        <div class="specimen-container w50 h50 h-gap-{{ size }} v-gap-{{ size }} align-center justify-center">\n            <div class="specimen background rect bg-a r4"\n                *ngFor="let i of [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]"></div>\n        </div>\n    </div>\n</ng-container>\n\n'}),(0,tslib_es6.Sn)("design:paramtypes",[sample_data_sets.e,String])],HorizontalGapsComponent);let HorizontalLayoutComponent=class HorizontalLayoutComponent{constructor(samples,baseHref){this.samples=samples,this.baseHref=baseHref}getArrayForPercentageDivided(percent){return Array.from({length:Math.floor(100/percent)}).fill(0).map(((_,i)=>i))}getArrayWithLength(n){return Array.from({length:n}).fill(0).map(((_,i)=>i))}imageUrl(path){return`${this.baseHref.replace(/\/$/,"")}${path}`}randomImage(){const len=this.samples.PICTURE_ICONS.length,index=Math.floor(Math.random()*len),path=this.samples.PICTURE_ICONS[index];return console.log(len,index,path),this.imageUrl(path)}concat(a,b){return{...a,...b}}ngOnInit(){}getTooltip(...classes){return`<div class="bg-dark chip-s fixed-container h-gap-s h-layout">\n            \x3c!--\n            <div stroke-icon icon="search" class="fg-dark xs stroke-icon">\n                <svg width="26" height="26" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg">\n                    <ellipse cx="10" cy="10" rx="6" ry="6" transform="rotate(-90 10 10)"></ellipse>\n                    <path d="M14.5 14.5L20 20" stroke-linecap="round" stroke-linejoin="round"></path>\n                </svg>\n            </div>\n            --\x3e\n            <div class="fg-dark mono-small single-line">${classes.join("<br>")}</div>\n        </div>`}static{this.ctorParameters=()=>[{type:sample_data_sets.e},{type:String,decorators:[{type:core.Inject,args:[common.APP_BASE_HREF]}]}]}};HorizontalLayoutComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"[horizontal-layout-component]",changeDetection:core.ChangeDetectionStrategy.OnPush,template:'<h3 class="single-line sans-large mb20">Horizontal layout by percentage</h3>\n<ng-container\n    *ngFor="let w of [8, 10, 12, 16, 20, 25, 33, 50, 100]">\n    <p class="mono-medium">{{ w }}% (.w{{ w }}p)</p>\n    <div class="flex-container h-layout flex-wrap justify-center h-gap-s">\n        <div class="fixed-container w{{ w }}p h50 border rect fg-a r4"\n            *ngFor="let i of getArrayForPercentageDivided(w)"></div>\n    </div>\n</ng-container>\n\n<h3 class="single-line sans-large mb20">Horizontal layout by grid width</h3>\n<ng-container\n    *ngFor="let w of [50, 75, 100, 150, 200, 250, 300, 350, 400, 450]">\n    <p class="mono-medium">{{ w }}px (.w{{ w }})</p>\n    <div class="fixed-container h-layout align-center justify-center">\n        <div class="specimen-container w{{ w }} h50 h-gap-l v-gap-l align-center justify-center">\n            <ng-container *ngIf="w < 300">\n                <div class="specimen background rect bg-a r10"\n                    *ngFor="let i of [0,1,2,3,4,5]"></div>\n            </ng-container>\n            <ng-container *ngIf="w < 400">\n                <div class="specimen background rect bg-a r10"\n                    *ngFor="let i of [0,1,2]"></div>\n            </ng-container>\n            <ng-container *ngIf="w >= 400">\n                <div class="specimen background rect bg-a r10"\n                    *ngFor="let i of [0,1]"></div>\n            </ng-container>\n        </div>\n    </div>\n</ng-container>'}),(0,tslib_es6.Sn)("design:paramtypes",[sample_data_sets.e,String])],HorizontalLayoutComponent);var http=__webpack_require__("./node_modules/@angular/common/fesm2022/http.mjs");let LayoutComponent=class LayoutComponent{constructor(){this.view="horizontal-layout"}static{this.ctorParameters=()=>[]}static{this.propDecorators={view:[{type:core.Input}]}}};LayoutComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"[layout-component]",changeDetection:core.ChangeDetectionStrategy.OnPush,template:'\n<div class="layout styleguide-page">\n    <h1 class="single-line sans-large-bold h50 mb50">Layout</h1>\n\n    <ng-container *ngIf="view === \'horizontal-layout\'">\n        <div horizontal-layout-component class="v-layout m20"></div>\n    </ng-container>\n\n    <ng-container *ngIf="view === \'flex-layout\'">\n        <div flex-layout-component class="v-layout m20"></div>\n    </ng-container>\n\n    <ng-container *ngIf="view === \'box-layout\'">\n        <div box-layout-component class="v-layout m20"></div>\n    </ng-container>\n\n    <ng-container *ngIf="view === \'horizontal-gaps\'">\n        <div horizontal-gaps-component class="v-layout m20"></div>\n    </ng-container>\n\n    <ng-container *ngIf="view === \'vertical-gaps\'">\n        <div vertical-gaps-component class="v-layout m20"></div>\n    </ng-container>\n</div>'}),(0,tslib_es6.Sn)("design:paramtypes",[])],LayoutComponent);var storybook_shared_module=__webpack_require__("./.src/storybook/storybook_admin/lib/storybook/shared/storybook-shared.module.ts"),ui=__webpack_require__("./.src/storybook/storybook_admin/lib/modules/ui/index.ts");let VerticalGapsComponent=class VerticalGapsComponent{constructor(samples,baseHref){this.samples=samples,this.baseHref=baseHref}getArrayForPercentageDivided(percent){return Array.from({length:Math.floor(100/percent)}).fill(0).map(((_,i)=>i))}getArrayWithLength(n){return Array.from({length:n}).fill(0).map(((_,i)=>i))}imageUrl(path){return`${this.baseHref.replace(/\/$/,"")}${path}`}randomImage(){const len=this.samples.PICTURE_ICONS.length,index=Math.floor(Math.random()*len),path=this.samples.PICTURE_ICONS[index];return console.log(len,index,path),this.imageUrl(path)}concat(a,b){return{...a,...b}}ngOnInit(){}getTooltip(...classes){return`<div class="bg-dark chip-s fixed-container h-gap-s h-layout">\n            \x3c!--\n            <div stroke-icon icon="search" class="fg-dark xs stroke-icon">\n                <svg width="26" height="26" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg">\n                    <ellipse cx="10" cy="10" rx="6" ry="6" transform="rotate(-90 10 10)"></ellipse>\n                    <path d="M14.5 14.5L20 20" stroke-linecap="round" stroke-linejoin="round"></path>\n                </svg>\n            </div>\n            --\x3e\n            <div class="fg-dark mono-small single-line">${classes.join("<br>")}</div>\n        </div>`}static{this.ctorParameters=()=>[{type:sample_data_sets.e},{type:String,decorators:[{type:core.Inject,args:[common.APP_BASE_HREF]}]}]}};VerticalGapsComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"[vertical-gaps-component]",changeDetection:core.ChangeDetectionStrategy.OnPush,template:'\n\n\n<h3 class="single-line sans-large mb20">Vertical gaps with size</h3>\n<p class="mono-medium">Gap xs / s / m / l / xl (ex .v-gap-xl)</p>\n<div class="flex-container h-layout flex-wrap justify-center h-gap-l">\n    <div\n        *ngFor="let gap of [\'xs\', \'s\', \'m\', \'l\', \'xl\']"\n        class="fixed-container w20p h250 r4 v-layout v-gap-{{ gap }} align-start">\n        <div class="fixed-container w100p h20 background bg-a"\n            *ngFor="let i of [0, 1, 2, 3]"></div>\n    </div>\n</div>\n\n<h3 class="single-line sans-large mb20">Vertical gaps with rem</h3>\n<p class="mono-medium">Gap 0.5rem (.m5) 2rem (.m20) 3rem (.30) (gap can be set from m1-m10 per 1 & m10-m90 per 10)</p>\n<div class="flex-container h-layout flex-wrap justify-center h-gap-l">\n    <div\n        *ngFor="let gap of [5, 20, 30]"\n        class="fixed-container w33p h250 r4 v-layout m{{ gap }} align-start">\n        <div class="fixed-container w100p h20 background bg-a"\n            *ngFor="let i of [0, 1, 2, 3]"></div>\n    </div>\n</div>\n\n<h3 class="single-line sans-large mb20">Custom vertical gaps</h3>\n<p class="mono-medium">Besides fixed gaps, you can set irregular margin bottom. 1st item has margin-bottom of 0.5rem (.mb5) and 2nd item has margin-bottom of 5rem (.mb50)</p>\n<div class="flex-container h-layout flex-wrap justify-center h-gap-l">\n    <div\n        *ngFor="let gap of [10, 20, 30]"\n        class="fixed-container w33p h350 r4 v-layout m{{ gap }} align-start">\n        <div class="fixed-container w100p h20 background bg-a"\n            [class.mb5]="i === 0"\n            [class.mb50]="i === 1"\n            [class.bg-a]="i > 1"\n            [class.bg-b]="i <= 1"\n            *ngFor="let i of [0, 1, 2, 3]"></div>\n    </div>\n</div>\n\n\n\n'}),(0,tslib_es6.Sn)("design:paramtypes",[sample_data_sets.e,String])],VerticalGapsComponent);const layout_stories={title:"UI/Layout",component:LayoutComponent,argTypes:{},decorators:[(0,dist.moduleMetadata)({imports:[ui.r,storybook_shared_module.c],declarations:[LayoutComponent,FlexLayoutComponent,HorizontalLayoutComponent,HorizontalGapsComponent,VerticalGapsComponent,BoxLayoutComponent]}),(0,dist.applicationConfig)({providers:[(0,core.importProvidersFrom)(ui.r),(0,core.importProvidersFrom)(storybook_shared_module.c),(0,core.importProvidersFrom)(http.q1)]})]},horizontalLayout={args:{view:"horizontal-layout"}},flexLayout={args:{view:"flex-layout"}},boxLayout={args:{view:"box-layout"}},horizontalGaps={args:{view:"horizontal-gaps"}},verticalGaps={args:{view:"vertical-gaps"}};horizontalLayout.parameters={...horizontalLayout.parameters,docs:{...horizontalLayout.parameters?.docs,source:{originalSource:"{\n  args: {\n    view: 'horizontal-layout'\n  }\n}",...horizontalLayout.parameters?.docs?.source}}},flexLayout.parameters={...flexLayout.parameters,docs:{...flexLayout.parameters?.docs,source:{originalSource:"{\n  args: {\n    view: 'flex-layout'\n  }\n}",...flexLayout.parameters?.docs?.source}}},boxLayout.parameters={...boxLayout.parameters,docs:{...boxLayout.parameters?.docs,source:{originalSource:"{\n  args: {\n    view: 'box-layout'\n  }\n}",...boxLayout.parameters?.docs?.source}}},horizontalGaps.parameters={...horizontalGaps.parameters,docs:{...horizontalGaps.parameters?.docs,source:{originalSource:"{\n  args: {\n    view: 'horizontal-gaps'\n  }\n}",...horizontalGaps.parameters?.docs?.source}}},verticalGaps.parameters={...verticalGaps.parameters,docs:{...verticalGaps.parameters?.docs,source:{originalSource:"{\n  args: {\n    view: 'vertical-gaps'\n  }\n}",...verticalGaps.parameters?.docs?.source}}};const __namedExportsOrder=["horizontalLayout","flexLayout","boxLayout","horizontalGaps","verticalGaps"]}}]);